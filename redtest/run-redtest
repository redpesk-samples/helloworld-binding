#!/bin/bash

# when this script will be run, the packages your-application.rpm and your-application-redtest.rpm
# would have been installed on the target

PACKAGE_NAME="helloworld-binding"

# Install or reinstall dependencies
for p in afb-binding-devel afb-libpython afb-test-py; do
    sudo rpm -q $p && sudo dnf update -y $p || sudo dnf install -y $p 
done

# Create the directory where the logs need to be
LOG_DIR="/var/log/redtest/${PACKAGE_NAME}"
mkdir -p ${LOG_DIR}

# Run your tests (generate .tap file for redpesk)
echo "--- Start test python hello world binding ---"
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
export GCOV_PREFIX=${SCRIPT_DIR}/coverage_data/
LD_LIBRARY_PATH=${SCRIPT_DIR}/coverage_data/${PACKAGE_NAME}/lib/ python ${SCRIPT_DIR}/tests.py --tap | tee /var/log/redtest/${PACKAGE_NAME}/tests.tap 2>&1

# the following command will rename the gcda files to a more readable format for lcov
for f in $(find ${SCRIPT_DIR}/coverage_data -name "*.gcda"); do
    mv $f ${SCRIPT_DIR}/coverage_data/$(echo $f | cut -d'#' -f7- | tr '#' '/')
done


##########################
# Coverage report section
##########################

echo "--- Generating coverage reports ---"

# Clean previous coverage data
rm -f lcov_cobertura*
rm -rf lcov_cobertura-*

# Download lcov_cobertura tool
wget https://github.com/eriwen/lcov-to-cobertura-xml/releases/download/v2.1.1/lcov_cobertura-2.1.1.tar.gz
tar xzvf lcov_cobertura-2.1.1.tar.gz

# Generate lcov info file
rm -f app.info app_filtered.info
lcov --directory ${SCRIPT_DIR}/coverage_data/ --capture --output-file app.info

# Remove system headers and other noise
lcov --remove app.info '/usr/*' -o app_filtered.info

# Show coverage summary (will appear in GitLab CI logs)
lcov --list app_filtered.info

# Generate Cobertura-compatible XML for GitLab coverage
PYTHONPATH=./lcov_cobertura-2.1.1/ python -m lcov_cobertura app_filtered.info -o ${LOG_DIR}/coverage.xml


echo "--- Coverage report generated at ${LOG_DIR}/ ---"